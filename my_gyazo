#!/usr/bin/env python

"""Alternative gyazo script for Ubuntu"""

__author__ = "Nguyen Anh Tien (nguyen.anh.tien@framgia.com)"
__version__ = "1.0.0"

import httplib, mimetypes
import tempfile
import hashlib
import time
import os
import sys

BROWSER_CMD = "xdg-open"
HOST = "gyazo.com"
CGI = "/upload.cgi"
UA = "Gyazo/1.0"
UPLOAD_NAME = "gyazo.com"

# check .my_gyazo.id in your $HOME path for your gyazo's id
DEFAULT_ID = "fc0ee37405e765231798e3c9111a152f"
HOME_PATH = os.path.expanduser("~")
ID_FILE = os.path.join(HOME_PATH, '.my_gyazo.id')
GYAZO_ID_FILE = os.path.join(HOME_PATH, '.gyazo.id')

# http://code.activestate.com/recipes/146306-http-client-to-post-using-multipartform-data/
def post_multipart(host, selector, fields, files):
    """
    Post fields and files to an http host as multipart/form-data.
    fields is a sequence of (name, value) elements for regular form fields.
    files is a sequence of (name, filename, value) elements for data to be uploaded as files
    Return the server's response page.
    """
    content_type, body = encode_multipart_formdata(fields, files)
    h = httplib.HTTP(host)
    h.putrequest('POST', selector)
    h.putheader('Content-Type', content_type)
    h.putheader('Host', host)
    h.putheader('Accept', '*/*')
    h.putheader('User-Agent', UA)
    h.putheader('Content-Length', str(len(body)))
    h.endheaders()
    h.send(body)
    errcode, errmsg, headers = h.getreply()
    return h.file.read(), headers

def encode_multipart_formdata(fields, files):
    """
    fields is a sequence of (name, value) elements for regular form fields.
    files is a sequence of (name, filename, value) elements for data to be uploaded as files
    Return (content_type, body) ready for httplib.HTTP instance
    """
    BOUNDARY = '----BOUNDARYBOUNDARY----'
    CRLF = "\r\n"
    L = []
    for (key, value) in fields:
        L.append('--' + BOUNDARY)
        L.append('Content-Disposition: form-data; name="%s"' % key)
        L.append('')
        L.append(value)
    for (key, filename, value) in files:
        L.append('--' + BOUNDARY)
        L.append('Content-Disposition: form-data; name="%s"; filename="%s"' % (key, filename))
        L.append('')
        L.append(value)
    L.append('--' + BOUNDARY + '--')
    L.append('')
    body = CRLF.join(L)
    content_type = 'multipart/form-data; boundary=%s' % BOUNDARY
    return content_type, body

def read_gyazo_id():
    try:
        id_file = GYAZO_ID_FILE if os.path.isfile(GYAZO_ID_FILE) else ID_FILE
        f = open(id_file, 'r')
        data = f.read()
        f.close()
        return data
    except Exception, e:
        return None

if __name__ == '__main__':
    try:
        current_id = read_gyazo_id()
        if not current_id:
            current_id = DEFAULT_ID

        temp_name = "%s.png" % hashlib.md5(str(time.time())).hexdigest()
        temp_path = os.path.join(tempfile.gettempdir(), temp_name)

        os.system("gnome-screenshot -a -f %s" % temp_path)
        f = open(temp_path, 'rb')
        data = f.read()
        f.close()
        gyazo_url, headers = post_multipart(
            HOST,
            CGI,
            [('id', current_id)],
            [('imagedata', UPLOAD_NAME, data)]
        )
        if headers.has_key('X-Gyazo-Id'):
            new_id = headers['X-Gyazo-Id']
            f = open(ID_FILE, 'w')
            f.write(new_id)
            f.close()

        os.system("rm %s" % temp_path)
        os.system("%s %s" % (BROWSER_CMD, gyazo_url))
        print gyazo_url
    except Exception, e:
        print e
        sys.exit(1)
